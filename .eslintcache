[{"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/index.js":"1","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/reportWebVitals.js":"2","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/App.js":"3","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/container/Main.js":"4","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/store/reducers/auth.js":"5","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/Loader.js":"6","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/store/actions/actionTypes.js":"7","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/Form.js":"8","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/SmallText.js":"9","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/Input.js":"10","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/Heading.js":"11","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Form1.js":"12","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Main.js":"13","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/Button.js":"14","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Form2.js":"15","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Form4.js":"16","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Form3.js":"17","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Form6.js":"18","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Form5.js":"19","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/SubHeading.js":"20"},{"size":500,"mtime":1608897822000,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608897822000,"results":"23","hashOfConfig":"22"},{"size":879,"mtime":1609614508829,"results":"24","hashOfConfig":"22"},{"size":1841,"mtime":1609683399181,"results":"25","hashOfConfig":"22"},{"size":2850,"mtime":1609682616042,"results":"26","hashOfConfig":"22"},{"size":1352,"mtime":1608897822000,"results":"27","hashOfConfig":"22"},{"size":276,"mtime":1609669332713,"results":"28","hashOfConfig":"22"},{"size":1368,"mtime":1608897822000,"results":"29","hashOfConfig":"22"},{"size":905,"mtime":1609680853644,"results":"30","hashOfConfig":"22"},{"size":2294,"mtime":1608897822000,"results":"31","hashOfConfig":"22"},{"size":511,"mtime":1609649040088,"results":"32","hashOfConfig":"22"},{"size":6534,"mtime":1609683446617,"results":"33","hashOfConfig":"22"},{"size":408,"mtime":1609682879388,"results":"34","hashOfConfig":"22"},{"size":345,"mtime":1609615565064,"results":"35","hashOfConfig":"22"},{"size":5423,"mtime":1609683446629,"results":"36","hashOfConfig":"22"},{"size":3630,"mtime":1609683446906,"results":"37","hashOfConfig":"22"},{"size":8833,"mtime":1609683446911,"results":"38","hashOfConfig":"22"},{"size":3058,"mtime":1609683645189,"results":"39","hashOfConfig":"22"},{"size":5936,"mtime":1609683659992,"results":"40","hashOfConfig":"22"},{"size":489,"mtime":1609680847353,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"zhdplv",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/index.js",[],["85","86"],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/reportWebVitals.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/App.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/container/Main.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/store/reducers/auth.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/Loader.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/store/actions/actionTypes.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/Form.js",[],["87","88"],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/SmallText.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/Input.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/Heading.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Form1.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Main.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/Button.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Form2.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Form4.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Form3.js",["89"],"import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TextField } from \"formik-material-ui\";\nimport { Button, Typography, MenuItem } from \"@material-ui/core\";\nimport { Formik, Form, Field, FieldArray } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Heading from \"../components/Heading\";\nimport * as actionTypes from \"../store/actions/actionTypes\";\n\nconst validationSchema = Yup.object({\n  subgroup1: Yup.array().of(\n    Yup.object().shape({\n      name: Yup.string(),\n      description: Yup.string(),\n      features: Yup.array().of(Yup.string().required()).required(),\n    }),\n  ),\n  subgroup2: Yup.array().of(\n    Yup.object().shape({\n      quantity: Yup.number(),\n      price: Yup.number(),\n    }),\n  ),\n});\n\nconst nationality = [\n  \"Afghanistan\",\n  \"Andorra\",\n  \"Antigua and Barbuda\",\n  \"Anguilla\",\n  \"Albania\",\n];\nlet canLeave = false;\nexport default function Form3(props) {\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n\n  React.useEffect(() => {\n    canLeave = false;\n    window.addEventListener(\"beforeunload\", function (e) {\n      if (canLeave) {\n        var confirmationMessage =\n          \"There are unsaved changes left. Are you sure to leave?\";\n\n        (e || window.event).returnValue = confirmationMessage; //Gecko + IE\n        return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\n      }\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <Heading text=\"Product Options\" />\n      <Formik\n        initialValues={store.form3}\n        // validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          canLeave = true;\n          dispatch({ type: actionTypes.SET_FORM_3, data: values });\n          setTimeout(() => {\n            setSubmitting(false);\n\n            dispatch({ type: actionTypes.SET_PAGE, data: store.page + 1 });\n          }, 500);\n        }}\n      >\n        {({ submitForm, isSubmitting, values }) => (\n          <Form>\n            <Grid container spacing={2}>\n              <Grid item xs={12} container spacing={2}>\n                <Typography variant=\"h5\">Sub Group 1</Typography>\n                <FieldArray name=\"subgroup1\">\n                  {({ insert, remove, push }) => (\n                    <React.Fragment>\n                      {values.subgroup1.length > 0 &&\n                        values.subgroup1.map((subgroupItem, index) => (\n                          <Grid item xs={12} container spacing={2} key={index}>\n                            <Grid item xs={12}>\n                              <Field\n                                fullWidth\n                                component={TextField}\n                                name={`subgroup1.${index}.name`}\n                                type=\"text\"\n                                label=\"Product Name\"\n                              />\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Field\n                                fullWidth\n                                component={TextField}\n                                name={`subgroup1.${index}.description`}\n                                type=\"text\"\n                                label=\"Product Description\"\n                              />\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Field\n                                select\n                                fullWidth\n                                type=\"text\"\n                                variant=\"standard\"\n                                component={TextField}\n                                name={`subgroup1.${index}.features`}\n                                label=\"Product Features\"\n                                SelectProps={{\n                                  multiple: true,\n                                  defaultValue: [],\n                                }}\n                              >\n                                {nationality.map((option) => (\n                                  <MenuItem key={option} value={option}>\n                                    {option}\n                                  </MenuItem>\n                                ))}\n                              </Field>\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Button\n                                type=\"button\"\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                onClick={() => remove(index)}\n                              >\n                                X\n                              </Button>\n                            </Grid>\n                          </Grid>\n                        ))}\n                      <Grid item xs={12}>\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => push({ name: \"\", email: \"\" })}\n                        >\n                          Add Row\n                        </Button>\n                      </Grid>\n                    </React.Fragment>\n                  )}\n                </FieldArray>\n              </Grid>\n              <Grid item xs={12} container spacing={2}>\n                <Typography variant=\"h5\">Sub Group 2</Typography>\n                <FieldArray name=\"subgroup2\">\n                  {({ insert, remove, push }) => (\n                    <React.Fragment>\n                      {values.subgroup2.length > 0 &&\n                        values.subgroup2.map((subgroupItem, index) => (\n                          <Grid item xs={12} container spacing={2} key={index}>\n                            <Grid item xs={12}>\n                              <Field\n                                fullWidth\n                                component={TextField}\n                                name={`subgroup2.${index}.quantity`}\n                                type=\"number\"\n                                label=\"Product Quantity\"\n                              />\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Field\n                                fullWidth\n                                component={TextField}\n                                name={`subgroup2.${index}.price`}\n                                type=\"number\"\n                                label=\"Product Price\"\n                              />\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Button\n                                type=\"button\"\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                onClick={() => remove(index)}\n                              >\n                                X\n                              </Button>\n                            </Grid>\n                          </Grid>\n                        ))}\n                      <Grid item xs={12}>\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => push({ name: \"\", email: \"\" })}\n                        >\n                          Add Row\n                        </Button>\n                      </Grid>\n                    </React.Fragment>\n                  )}\n                </FieldArray>\n              </Grid>\n              <Grid item xs={12} container spacing={2}>\n                <Grid item xs={6}>\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    onClick={() => {\n                      canLeave = true;\n                      dispatch({\n                        type: actionTypes.SET_PAGE,\n                        data: store.page - 1,\n                      });\n                    }}\n                  >\n                    Back\n                  </Button>\n                </Grid>\n                <Grid item xs={6}>\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    onClick={submitForm}\n                  >\n                    Next\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Form6.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/pages/Form5.js",[],"/Users/invalid/Desktop/Talha/Others/dynamicForms/src/components/SubHeading.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"90","replacedBy":"94"},{"ruleId":"92","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":12,"column":7,"nodeType":"98","messageId":"99","endLine":12,"endColumn":23},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],"no-unused-vars","'validationSchema' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]